高级IO

阻塞IO
在内核将数据准备好之前，系统调用会一直等待。（所有的套接字默认都是阻塞方式）

阻塞IO是最常见的IO模型。



非阻塞IO
如果内核还未将数据准备好，系统调用仍然会直接返回，并且返回EWOULDBLOCK错误码

非阻塞IO往往需要程序员循环的方式反复尝试读写文件描述符，这个过程称之为轮询。这对CPU来说是极大的浪费，一般只有特定场景下才使用



信号驱动IO
内核将数据准备好的时候，使用SIGIO信号通知应用程序进行IO操作



IO多路转接
虽然从流程图上看起来和阻塞IO类似，但是实际上最核心在于IO多路转接能够同时等待多个文件描述符的就绪状态



异步IO
由内核在数据拷贝完成时，通知应用程序（与信号驱动不同的是，信号驱动是等到了数据告诉应用程序可以拷贝数据了）


————————————————
版权声明：本文为CSDN博主「瞎子my」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_41091373/article/details/89417961
